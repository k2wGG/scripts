// ==UserScript==
// @name         GetUranium AutoBoost v2
// @namespace    https://github.com/k2wGG
// @version      2.8.1
// @description  –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –±—É—Å—Ç–µ—Ä–æ–≤, —Å–±–æ—Ä —Ñ–µ—Ä–º—ã, keep-alive –∏ –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞.
// @author       k2wGG
// @match        https://geturanium.io/*
// @match        https://www.geturanium.io/*
// @run-at       document-start
// @grant        none
// ==/UserScript==

;(function(){
  'use strict';
  console.info('üöÄ AutoBoost v2.8.1 –∑–∞–≥—Ä—É–∂–µ–Ω');

  /* ---------------------------------------------------------------
   * 0) –ü–∞—Ç—á React ‚Äì –¥–µ–ª–∞–µ–º Event.isTrusted –≤—Å–µ–≥–¥–∞ true
   * ------------------------------------------------------------- */
  if(!Event.prototype.__ab_trusted){
    [Event, MouseEvent].forEach(C=>{
      Object.defineProperty(C.prototype,'isTrusted',{
        get(){ return true; },
        configurable:true
      });
    });
    Event.prototype.__ab_trusted = true;
  }

  /* ---------------------------------------------------------------
   * 1) –ö–æ–Ω—Ñ–∏–≥ + State (localStorage / sessionStorage)
   * ------------------------------------------------------------- */
  const DEF = {
    enabled:       true,
    autoAC:        true,
    autoSM:        true,
    autoCB:        true,
    autoFarm:      true,
    keepAlive:     true,
    autoReload:    true,
    reloadMinutes: 50,
    logEach:       10
  };
  const LS_CFG   = 'gu-autoboost-config';
  const LS_STATS = 'gu-autoboost-stats';

  let cfg   = loadConfig();
  let stats = loadStats();

  /** –∑–∞–≥—Ä—É–∑–∫–∞ / —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞ */
  function loadConfig(){
    try{ return {...DEF, ...JSON.parse(localStorage.getItem(LS_CFG)||'{}')}; }
    catch(e){ console.error('[AutoBoost] –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞',e); return {...DEF}; }
  }
  function saveConfig(){ localStorage.setItem(LS_CFG, JSON.stringify(cfg)); }

  /** –∑–∞–≥—Ä—É–∑–∫–∞ / —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */
  function loadStats(){
    try{
      return JSON.parse(sessionStorage.getItem(LS_STATS)) || {
        reloadCount: 0,
        clickCount: { autoAC:0, autoSM:0, autoCB:0, autoFarm:0 }
      };
    }catch(e){
      console.error('[AutoBoost] –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è stats',e);
      return { reloadCount: 0, clickCount:{autoAC:0,autoSM:0,autoCB:0,autoFarm:0} };
    }
  }
  function saveStats(){ sessionStorage.setItem(LS_STATS, JSON.stringify(stats)); }

  /** –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ */
  const rnd = (min,max)=> min + Math.random()*(max-min)|0;

  /* ---------------------------------------------------------------
   * 2) Soft keep-alive ‚Äî –∞–Ω—Ç–∏-AFK
   * ------------------------------------------------------------- */
  setInterval(()=>{
    if(!cfg.keepAlive) return;
    fetch('/favicon.ico',{cache:'no-store',mode:'no-cors'}).catch(()=>{});

    document.dispatchEvent(new MouseEvent('mousemove',{bubbles:true}));
    document.dispatchEvent(new Event('visibilitychange'));

    window.scrollBy(0, rnd(-1,1));                             // –ª—ë–≥–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    document.dispatchEvent(new KeyboardEvent('keydown',{key:' ',code:'Space',bubbles:true}));
    document.dispatchEvent(new KeyboardEvent('keyup'  ,{key:' ',code:'Space',bubbles:true}));
  }, rnd(90,120)*1000);

  /* ---------------------------------------------------------------
   * 3) –ü–µ—Ä–µ—Ö–≤–∞—Ç fetch ‚Äî 429 / 403
   * ------------------------------------------------------------- */
  let backoffUntil = 0;
  const nativeFetch = window.fetch.bind(window);
  window.fetch = async (...args) => {
    const res = await nativeFetch(...args);
    if(res.status===429){
      backoffUntil = Date.now()+5*60*1000;
      console.warn('[AutoBoost] 429 ‚Üí —Å—Ç–∞–≤–∏–º –ø–∞—É–∑—É 5 –º–∏–Ω');
    }
    if(res.status===403){
      console.warn('[AutoBoost] 403 ‚Üí –∂—ë—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞');
      hardReload();
    }
    return res;
  };

  /* ---------------------------------------------------------------
   * 4) –ê–≤—Ç–æ–∫–ª–∏–∫ –±—É—Å—Ç–µ—Ä–æ–≤ + —Ñ–µ—Ä–º–∞
   * ------------------------------------------------------------- */
  const LABELS = {
    autoAC  : 'auto collector',
    autoSM  : 'shard multiplier',
    autoCB  : 'conveyor booster',
    autoFarm: 'farm reward'
  };
  const timers   = {};
  const lastClick= {};
  const nextLog  = { value: Date.now() };

  /** –∏—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ –Ω–∞—á–∞–ª—É —Ç–µ–∫—Å—Ç–∞ */
  function findBtn(text){
    return [...document.querySelectorAll('button')]
      .find(b => b.innerText.toLowerCase().startsWith(text.toLowerCase()));
  }
  /** –ø–∞—Ä—Å–∏–º –∫—É–ª–¥–∞—É–Ω */
  function getCooldown(btn){
    if(!btn || btn.disabled===false) return 0;
    if(/activating/i.test(btn.innerText)) return 3000;
    const m = /(\d+)\s*m.*?(\d+)\s*s/i.exec(btn.innerText);
    if(m) return (60*+m[1] + +m[2])*1000;
    const s = /(\d+)\s*s/i.exec(btn.innerText);
    if(s) return (+s[1])*1000;
    return 600000;
  }
  /** ¬´—á–µ—Å—Ç–Ω—ã–π¬ª –∫–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É */
  function doClick(el){
    if(!el) return;
    const rect = el.getBoundingClientRect();
    if(!rect.width||!rect.height) return;
    const x = rect.left + Math.random()*rect.width;
    const y = rect.top  + Math.random()*rect.height;
    ['mousedown','mouseup','click'].forEach(type=>
      el.dispatchEvent(new MouseEvent(type,{
        bubbles:true,cancelable:true,view:window,
        button:0,buttons:type==='mousedown'?1:0,
        clientX:x,clientY:y,isTrusted:true
      }))
    );
  }

  /** –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∫–ª–∏–∫–æ–≤ */
  function schedule(key){
    clearTimeout(timers[key]);

    if(Date.now()<backoffUntil){
      timers[key] = setTimeout(()=>schedule(key), backoffUntil-Date.now()+1000);
      return;
    }
    if(!cfg.enabled){
      timers[key] = setTimeout(()=>schedule(key), 3000);
      return;
    }

    const btn = findBtn(LABELS[key]);
    const cd  = getCooldown(btn);

    if(cd===0){
      const since = Date.now()-(lastClick[key]||0);
      const gap   = 8000 + rnd(0,2000);
      if(cfg[key] && btn && !btn.disabled && since>gap){
        doClick(btn);
        lastClick[key] = Date.now();
        stats.clickCount[key]++; saveStats(); updateStatsUI();
        log(`‚ö° ${key}`);
      }
      timers[key] = setTimeout(()=>schedule(key),1000);
    }else{
      const delay = cd + 1000 + rnd(0,1500);
      log(`‚è≥ ${key}: ${Math.round(cd/1000)} —Å`);
      timers[key] = setTimeout(()=>schedule(key), delay);
    }
  }
  /** –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ (–∫—Ä–æ–º–µ —Ñ–µ—Ä–º—ã) */
  function startAll(){
    Object.keys(LABELS).forEach(key=> key!=='autoFarm' && schedule(key));
  }

  /* ---------------------------------------------------------------
   * 5) –ê–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∫–ª–∞–¥–∫–∏
   * ------------------------------------------------------------- */
  let reloadTimer = null;
  function scheduleReload(){
    clearTimeout(reloadTimer);
    if(!cfg.autoReload) return;
    const ms = cfg.reloadMinutes*60*1000;
    console.info(`[AutoBoost] —Å–ª–µ–¥—É—é—â–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ ${cfg.reloadMinutes} –º–∏–Ω`);
    reloadTimer = setTimeout(()=>{
      stats.reloadCount++; saveStats(); updateStatsUI();
      hardReload();
    }, ms);
  }
  function hardReload(){
    location.replace(location.pathname+'?_='+Date.now());
  }

  /* ---------------------------------------------------------------
   * 6) keep-alive –¥–ª—è Vercel (–ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ edge-—Ñ—É–Ω–∫—Ü–∏–π)
   * ------------------------------------------------------------- */
  function scheduleVercel(){
    if(!cfg.keepAlive) return;
    const ms = rnd(50,55)*60*1000;
    console.info(`[AutoBoost] ping Vercel —á–µ—Ä–µ–∑ ‚âà${Math.round(ms/60000)} –º–∏–Ω`);
    setTimeout(()=>{
      const f=document.createElement('iframe');
      f.style.display='none'; f.src='/';
      document.body.append(f);
      setTimeout(()=>f.remove(),15000);
      scheduleVercel();
    }, ms);
  }

  /* ---------------------------------------------------------------
   * 7) –ê–≤—Ç–æ-—Ñ–µ—Ä–º–∞ —Ä–∞–∑ –≤ 8 —á–∞—Å–æ–≤
   * ------------------------------------------------------------- */
  let farmInterval = null;
  function doFarm(){
    if(!cfg.autoFarm) return;
    const b = findBtn(LABELS.autoFarm);
    if(b && !b.disabled){
      doClick(b);
      stats.clickCount.autoFarm++; saveStats(); updateStatsUI();
      console.info('[AutoBoost] üåæ –∫–ª–∏–∫ –ø–æ —Ñ–µ—Ä–º–µ');
    }
  }
  function scheduleFarm(){
    clearInterval(farmInterval);
    if(!cfg.autoFarm) return;
    doFarm();
    farmInterval = setInterval(doFarm, 8*60*60*1000 + rnd(0,5*60*1000));
  }

  /* ---------------------------------------------------------------
   * 8) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
   * ------------------------------------------------------------- */
  function init(){
    /* UI —É–∂–µ –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω –≤ waitBody ‚Üí –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ-–∫–ª–∏–∫ */
    if(!findBtn(LABELS.autoAC) && !findBtn(LABELS.autoSM) && !findBtn(LABELS.autoCB)){
      requestAnimationFrame(init);          // –∂–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
      return;
    }
    console.info('‚úÖ AutoBoost –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    startAll();
    scheduleReload();
    scheduleVercel();
    scheduleFarm();
  }

  /* ---------------------------------------------------------------
   * 9) –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —á–∞—Å—Ç–æ—Ç—ã
   * ------------------------------------------------------------- */
  function log(msg){
    if(!cfg.logEach) return;
    const now = Date.now();
    if(now >= nextLog.value){
      console.log(`[AutoBoost] ${msg}`);
      nextLog.value = now + cfg.logEach*1000;
    }
  }

  /* ---------------------------------------------------------------
   * 10) UI + —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
   * ------------------------------------------------------------- */
  let updateStatsUI = ()=>{};   // –±—É–¥–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
  function renderUI(){
    if(document.querySelector('.gu-gear')) return;       // –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º

    const css = `
      .gu-gear{
        position:fixed;top:12px;right:12px;width:36px;height:36px;
        background:#1b1b25dd;border-radius:50%;display:flex;
        align-items:center;justify-content:center;cursor:pointer;
        z-index:9999;color:#8cf;font-size:20px;user-select:none}
      .gu-gear:hover{transform:rotate(45deg)}
      .gu-panel{
        position:fixed;top:56px;right:12px;width:340px;background:#1b1b25f2;
        padding:12px;border-radius:8px;font:13px/1.4 sans-serif;color:#cee;
        box-shadow:0 4px 8px rgba(0,0,0,.3)}
      .gu-panel hr{border-color:#444;margin:8px 0}
      .gu-panel .row{display:flex;align-items:center;justify-content:space-between;margin:4px 0}
      .gu-panel .row label{flex:1;margin-right:8px;cursor:pointer}
      .gu-panel input[type=number]{width:60px;background:#111;color:#fee;
        border:1px solid #555;border-radius:4px;text-align:center}
      .gu-panel button{width:100%;margin-top:8px;padding:6px 0;background:#444;border:none;
        border-radius:4px;color:#eee;cursor:pointer;transition:background-color .2s}
      .gu-panel button:hover{background:#555}
      .stat-value{font-weight:bold;color:#4caf50}`;
    const html = `
      <div class="gu-gear">‚öôÔ∏è</div>
      <div class="gu-panel" style="display:none">
        <div class="row"><label><input id="gu-enabled" type="checkbox"> –í–∫–ª—é—á–∏—Ç—å –≤—Å—ë</label></div><hr/>
        <div class="row"><label><input id="gu-ac" type="checkbox"> Auto Collector</label></div>
        <div class="row"><label><input id="gu-sm" type="checkbox"> Shard Multiplier</label></div>
        <div class="row"><label><input id="gu-cb" type="checkbox"> Conveyor Booster</label></div><hr/>
        <div class="row"><label><input id="gu-farm" type="checkbox"> Auto Farm (8 —á)</label></div><hr/>
        <div class="row"><label><input id="gu-ka" type="checkbox"> Keep-Alive</label></div>
        <div class="row"><label><input id="gu-reload" type="checkbox"> Auto Reload</label></div>
        <div class="row"><label>–ò–Ω—Ç–µ—Ä–≤–∞–ª (–º–∏–Ω)</label><input id="gu-reload-min" type="number" min="1"></div><hr/>
        <div class="row"><label>–õ–æ–≥ –∫–∞–∂–¥—ã–µ (—Å)</label><input id="gu-log" type="number" min="0"></div><hr/>
        <div class="row"><label>–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–æ–∫</label><div id="st-rel"  class="stat-value">0</div></div>
        <div class="row"><label>Collector</label><div id="st-ac"   class="stat-value">0</div></div>
        <div class="row"><label>Shard</label><div    id="st-sm"   class="stat-value">0</div></div>
        <div class="row"><label>Booster</label><div  id="st-cb"   class="stat-value">0</div></div>
        <div class="row"><label>Farm</label><div     id="st-farm" class="stat-value">0</div></div><hr/>
        <button id="gu-reset">–°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫</button>
      </div>`;
    document.head.insertAdjacentHTML('beforeend',`<style>${css}</style>`);
    document.body.insertAdjacentHTML('beforeend',html);

    const $ = s=>document.querySelector(s);
    const gear  = $('.gu-gear');
    const panel = $('.gu-panel');

    updateStatsUI = ()=>{
      $('#st-rel').textContent  = stats.reloadCount;
      $('#st-ac').textContent   = stats.clickCount.autoAC;
      $('#st-sm').textContent   = stats.clickCount.autoSM;
      $('#st-cb').textContent   = stats.clickCount.autoCB;
      $('#st-farm').textContent = stats.clickCount.autoFarm;
    };

    /** —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ –ø–æ–ª–µ–π */
    function syncUI(){
      $('#gu-enabled').checked      = cfg.enabled;
      $('#gu-ac').checked           = cfg.autoAC;
      $('#gu-sm').checked           = cfg.autoSM;
      $('#gu-cb').checked           = cfg.autoCB;
      $('#gu-farm').checked         = cfg.autoFarm;
      $('#gu-ka').checked           = cfg.keepAlive;
      $('#gu-reload').checked       = cfg.autoReload;
      $('#gu-reload-min').value     = cfg.reloadMinutes;
      $('#gu-log').value            = cfg.logEach;
      updateStatsUI();
    }
    syncUI();

    /* –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è */
    $('#gu-enabled').onchange     = e=>{ cfg.enabled       = e.target.checked; saveConfig(); startAll(); };
    $('#gu-ac').onchange          = e=>{ cfg.autoAC        = e.target.checked; saveConfig(); };
    $('#gu-sm').onchange          = e=>{ cfg.autoSM        = e.target.checked; saveConfig(); };
    $('#gu-cb').onchange          = e=>{ cfg.autoCB        = e.target.checked; saveConfig(); };
    $('#gu-farm').onchange        = e=>{ cfg.autoFarm      = e.target.checked; saveConfig(); scheduleFarm(); };
    $('#gu-ka').onchange          = e=>{ cfg.keepAlive     = e.target.checked; saveConfig(); };
    $('#gu-reload').onchange      = e=>{ cfg.autoReload    = e.target.checked; saveConfig(); scheduleReload(); };
    $('#gu-reload-min').onchange  = e=>{ cfg.reloadMinutes = Math.max(1,~~e.target.value); saveConfig(); scheduleReload(); };
    $('#gu-log').onchange         = e=>{ cfg.logEach       = Math.max(0,~~e.target.value); saveConfig(); };

    $('#gu-reset').onclick = ()=>{
      Object.assign(cfg,DEF);
      stats = { reloadCount:0, clickCount:{autoAC:0,autoSM:0,autoCB:0,autoFarm:0} };
      saveConfig(); saveStats(); syncUI(); startAll(); scheduleFarm(); console.clear();
    };

    /* –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏ ‚Äî –±–µ–∑ return-assign */
    gear.onclick = () => {
      panel.style.display = panel.style.display==='none' ? 'block' : 'none';
    };
  }

  /* ---------------------------------------------------------------
   * 11) –†–∏—Å—É–µ–º UI —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è <body>
   * ------------------------------------------------------------- */
  const waitBody = fn => document.body ? fn() : setTimeout(()=>waitBody(fn),50);
  waitBody(renderUI);                             // ‚Üê —à–µ—Å—Ç–µ—Ä—ë–Ω–∫–∞ –ø–æ–∫–∞–∂–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
  setInterval(()=> !document.querySelector('.gu-gear') && renderUI(), 10000); // –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º, –µ—Å–ª–∏ —É–¥–∞–ª—è—Ç

  /* ---------------------------------------------------------------
   * 12) –°—Ç–∞—Ä—Ç —Å–∫—Ä–∏–ø—Ç–∞
   * ------------------------------------------------------------- */
  if(document.readyState==='complete') init();
  else window.addEventListener('load', init, { once:true });

  /* –Ω–∞–±–ª—é–¥–∞–µ–º –∑–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM */
  new MutationObserver(m=> m.some(x=>x.type==='childList') && startAll())
    .observe(document.documentElement,{childList:true,subtree:true});

})();
